plugins {
    id("org.springframework.boot") version "$springbootVersion"
    id("io.spring.dependency-management") version "1.0.10.RELEASE"
    id "org.jetbrains.kotlin.plugin.spring" version "$kotlinVersion"
    id "com.avast.gradle.docker-compose" version "0.13.4"
    id "org.flywaydb.flyway" version "$flywayVersion"
    id 'application'
}

group = "com.rmulka"
version = "0.0.1-SNAPSHOT"

java.sourceCompatibility = JavaVersion.VERSION_11

apply plugin: "docker-compose"
apply plugin: "application"

mainClassName = "com.rmulka.bs.WebSocketApplicationKt"

repositories {
    mavenCentral()
    maven { url = uri("https://repo.spring.io/snapshot") }
}

dependencies {
    implementation project(":database")

    implementation "org.springframework.boot:spring-boot-starter-actuator:${springbootVersion}"
    implementation("org.springframework.boot:spring-boot-starter-jooq:$springbootVersion")
	implementation("org.springframework.boot:spring-boot-starter-websocket:$springbootVersion")
    implementation("com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion")
    implementation("com.wavefront:wavefront-spring-boot-starter:$wavefrontVersion")
    implementation("org.flywaydb:flyway-core:$flywayVersion")
    implementation("io.github.microutils:kotlin-logging:$loggerVersion")

    implementation "org.postgresql:postgresql:$postgresDriverVersion"

    testImplementation("org.springframework.boot:spring-boot-starter-test")
}

dependencyManagement {
    imports {
        mavenBom "com.wavefront:wavefront-spring-boot-bom:$wavefrontVersion"
    }
}

dockerCompose {
    noRecreate = true
    projectName = "bs"
    removeOrphans = true
}

flyway {
    url = 'jdbc:postgresql://localhost:5433/bs'
    user = 'user'
    password = 'pass'
    locations = ['classpath:db/migration']
}

compileKotlin {
    kotlinOptions.jvmTarget = "11"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "11"
}

test {
    useJUnitPlatform()
}