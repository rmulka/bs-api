/*
 * This file is generated by jOOQ.
 */
package com.rmulka.bs.jooq.generated.tables.records;


import com.rmulka.bs.jooq.generated.tables.Player;

import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlayerRecord extends UpdatableRecordImpl<PlayerRecord> implements Record5<UUID, String, LocalDateTime, LocalDateTime, Long> {

    private static final long serialVersionUID = -741172886;

    /**
     * Setter for <code>bs.player.id</code>.
     */
    public PlayerRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>bs.player.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>bs.player.player_name</code>.
     */
    public PlayerRecord setPlayerName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>bs.player.player_name</code>.
     */
    public String getPlayerName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>bs.player.created_at</code>.
     */
    public PlayerRecord setCreatedAt(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>bs.player.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>bs.player.updated_at</code>.
     */
    public PlayerRecord setUpdatedAt(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>bs.player.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>bs.player.rec_version</code>.
     */
    public PlayerRecord setRecVersion(Long value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>bs.player.rec_version</code>.
     */
    public Long getRecVersion() {
        return (Long) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<UUID, String, LocalDateTime, LocalDateTime, Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<UUID, String, LocalDateTime, LocalDateTime, Long> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Player.PLAYER.ID;
    }

    @Override
    public Field<String> field2() {
        return Player.PLAYER.PLAYER_NAME;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return Player.PLAYER.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Player.PLAYER.UPDATED_AT;
    }

    @Override
    public Field<Long> field5() {
        return Player.PLAYER.REC_VERSION;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getPlayerName();
    }

    @Override
    public LocalDateTime component3() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component4() {
        return getUpdatedAt();
    }

    @Override
    public Long component5() {
        return getRecVersion();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getPlayerName();
    }

    @Override
    public LocalDateTime value3() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value4() {
        return getUpdatedAt();
    }

    @Override
    public Long value5() {
        return getRecVersion();
    }

    @Override
    public PlayerRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public PlayerRecord value2(String value) {
        setPlayerName(value);
        return this;
    }

    @Override
    public PlayerRecord value3(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public PlayerRecord value4(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public PlayerRecord value5(Long value) {
        setRecVersion(value);
        return this;
    }

    @Override
    public PlayerRecord values(UUID value1, String value2, LocalDateTime value3, LocalDateTime value4, Long value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PlayerRecord
     */
    public PlayerRecord() {
        super(Player.PLAYER);
    }

    /**
     * Create a detached, initialised PlayerRecord
     */
    public PlayerRecord(UUID id, String playerName, LocalDateTime createdAt, LocalDateTime updatedAt, Long recVersion) {
        super(Player.PLAYER);

        set(0, id);
        set(1, playerName);
        set(2, createdAt);
        set(3, updatedAt);
        set(4, recVersion);
    }
}
