/*
 * This file is generated by jOOQ.
 */
package com.rmulka.bs.jooq.generated.tables.daos;


import com.rmulka.bs.jooq.generated.tables.Player;
import com.rmulka.bs.jooq.generated.tables.records.PlayerRecord;

import java.util.List;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlayerDao extends DAOImpl<PlayerRecord, com.rmulka.bs.jooq.generated.tables.pojos.Player, UUID> {

    /**
     * Create a new PlayerDao without any configuration
     */
    public PlayerDao() {
        super(Player.PLAYER, com.rmulka.bs.jooq.generated.tables.pojos.Player.class);
    }

    /**
     * Create a new PlayerDao with an attached configuration
     */
    public PlayerDao(Configuration configuration) {
        super(Player.PLAYER, com.rmulka.bs.jooq.generated.tables.pojos.Player.class, configuration);
    }

    @Override
    public UUID getId(com.rmulka.bs.jooq.generated.tables.pojos.Player object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.rmulka.bs.jooq.generated.tables.pojos.Player> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Player.PLAYER.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.rmulka.bs.jooq.generated.tables.pojos.Player> fetchById(UUID... values) {
        return fetch(Player.PLAYER.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.rmulka.bs.jooq.generated.tables.pojos.Player fetchOneById(UUID value) {
        return fetchOne(Player.PLAYER.ID, value);
    }

    /**
     * Fetch records that have <code>player_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.rmulka.bs.jooq.generated.tables.pojos.Player> fetchRangeOfPlayerName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Player.PLAYER.PLAYER_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>player_name IN (values)</code>
     */
    public List<com.rmulka.bs.jooq.generated.tables.pojos.Player> fetchByPlayerName(String... values) {
        return fetch(Player.PLAYER.PLAYER_NAME, values);
    }
}
