/*
 * This file is generated by jOOQ.
 */
package com.rmulka.bs.jooq.generated.tables;


import com.rmulka.bs.jooq.generated.Bs;
import com.rmulka.bs.jooq.generated.Keys;
import com.rmulka.bs.jooq.generated.tables.records.ChatRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Chat extends TableImpl<ChatRecord> {

    private static final long serialVersionUID = -892653922;

    /**
     * The reference instance of <code>bs.chat</code>
     */
    public static final Chat CHAT = new Chat();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ChatRecord> getRecordType() {
        return ChatRecord.class;
    }

    /**
     * The column <code>bs.chat.id</code>.
     */
    public final TableField<ChatRecord, UUID> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>bs.chat.game_id</code>.
     */
    public final TableField<ChatRecord, UUID> GAME_ID = createField(DSL.name("game_id"), org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>bs.chat.player_id</code>.
     */
    public final TableField<ChatRecord, UUID> PLAYER_ID = createField(DSL.name("player_id"), org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>bs.chat.message</code>.
     */
    public final TableField<ChatRecord, String> MESSAGE = createField(DSL.name("message"), org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>bs.chat.created_at</code>.
     */
    public final TableField<ChatRecord, LocalDateTime> CREATED_AT = createField(DSL.name("created_at"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>bs.chat.rec_version</code>.
     */
    public final TableField<ChatRecord, Long> REC_VERSION = createField(DSL.name("rec_version"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("1", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>bs.chat</code> table reference
     */
    public Chat() {
        this(DSL.name("chat"), null);
    }

    /**
     * Create an aliased <code>bs.chat</code> table reference
     */
    public Chat(String alias) {
        this(DSL.name(alias), CHAT);
    }

    /**
     * Create an aliased <code>bs.chat</code> table reference
     */
    public Chat(Name alias) {
        this(alias, CHAT);
    }

    private Chat(Name alias, Table<ChatRecord> aliased) {
        this(alias, aliased, null);
    }

    private Chat(Name alias, Table<ChatRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> Chat(Table<O> child, ForeignKey<O, ChatRecord> key) {
        super(child, key, CHAT);
    }

    @Override
    public Schema getSchema() {
        return Bs.BS;
    }

    @Override
    public UniqueKey<ChatRecord> getPrimaryKey() {
        return Keys.CHAT_PKEY;
    }

    @Override
    public List<UniqueKey<ChatRecord>> getKeys() {
        return Arrays.<UniqueKey<ChatRecord>>asList(Keys.CHAT_PKEY);
    }

    @Override
    public TableField<ChatRecord, Long> getRecordVersion() {
        return REC_VERSION;
    }

    @Override
    public Chat as(String alias) {
        return new Chat(DSL.name(alias), this);
    }

    @Override
    public Chat as(Name alias) {
        return new Chat(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Chat rename(String name) {
        return new Chat(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Chat rename(Name name) {
        return new Chat(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<UUID, UUID, UUID, String, LocalDateTime, Long> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
