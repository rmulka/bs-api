/*
 * This file is generated by jOOQ.
 */
package com.rmulka.bs.jooq.generated.tables.records;


import com.rmulka.bs.jooq.generated.tables.PlayerGame;

import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlayerGameRecord extends UpdatableRecordImpl<PlayerGameRecord> implements Record4<UUID, UUID, UUID, Boolean> {

    private static final long serialVersionUID = 1803407785;

    /**
     * Setter for <code>bs.player_game.id</code>.
     */
    public PlayerGameRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>bs.player_game.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>bs.player_game.player_id</code>.
     */
    public PlayerGameRecord setPlayerId(UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>bs.player_game.player_id</code>.
     */
    public UUID getPlayerId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>bs.player_game.game_id</code>.
     */
    public PlayerGameRecord setGameId(UUID value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>bs.player_game.game_id</code>.
     */
    public UUID getGameId() {
        return (UUID) get(2);
    }

    /**
     * Setter for <code>bs.player_game.is_creator</code>.
     */
    public PlayerGameRecord setIsCreator(Boolean value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>bs.player_game.is_creator</code>.
     */
    public Boolean getIsCreator() {
        return (Boolean) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<UUID, UUID, UUID, Boolean> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<UUID, UUID, UUID, Boolean> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return PlayerGame.PLAYER_GAME.ID;
    }

    @Override
    public Field<UUID> field2() {
        return PlayerGame.PLAYER_GAME.PLAYER_ID;
    }

    @Override
    public Field<UUID> field3() {
        return PlayerGame.PLAYER_GAME.GAME_ID;
    }

    @Override
    public Field<Boolean> field4() {
        return PlayerGame.PLAYER_GAME.IS_CREATOR;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public UUID component2() {
        return getPlayerId();
    }

    @Override
    public UUID component3() {
        return getGameId();
    }

    @Override
    public Boolean component4() {
        return getIsCreator();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public UUID value2() {
        return getPlayerId();
    }

    @Override
    public UUID value3() {
        return getGameId();
    }

    @Override
    public Boolean value4() {
        return getIsCreator();
    }

    @Override
    public PlayerGameRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public PlayerGameRecord value2(UUID value) {
        setPlayerId(value);
        return this;
    }

    @Override
    public PlayerGameRecord value3(UUID value) {
        setGameId(value);
        return this;
    }

    @Override
    public PlayerGameRecord value4(Boolean value) {
        setIsCreator(value);
        return this;
    }

    @Override
    public PlayerGameRecord values(UUID value1, UUID value2, UUID value3, Boolean value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PlayerGameRecord
     */
    public PlayerGameRecord() {
        super(PlayerGame.PLAYER_GAME);
    }

    /**
     * Create a detached, initialised PlayerGameRecord
     */
    public PlayerGameRecord(UUID id, UUID playerId, UUID gameId, Boolean isCreator) {
        super(PlayerGame.PLAYER_GAME);

        set(0, id);
        set(1, playerId);
        set(2, gameId);
        set(3, isCreator);
    }
}
