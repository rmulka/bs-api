/*
 * This file is generated by jOOQ.
 */
package com.rmulka.bs.jooq.generated.tables.records;


import com.rmulka.bs.jooq.generated.tables.Game;

import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.JSONB;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GameRecord extends UpdatableRecordImpl<GameRecord> implements Record10<UUID, Boolean, JSONB, Integer, String, LocalDateTime, LocalDateTime, Boolean, UUID, Long> {

    private static final long serialVersionUID = 551382861;

    /**
     * Setter for <code>bs.game.id</code>.
     */
    public GameRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>bs.game.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>bs.game.in_progress</code>.
     */
    public GameRecord setInProgress(Boolean value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>bs.game.in_progress</code>.
     */
    public Boolean getInProgress() {
        return (Boolean) get(1);
    }

    /**
     * Setter for <code>bs.game.details</code>.
     */
    public GameRecord setDetails(JSONB value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>bs.game.details</code>.
     */
    public JSONB getDetails() {
        return (JSONB) get(2);
    }

    /**
     * Setter for <code>bs.game.num_players</code>.
     */
    public GameRecord setNumPlayers(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>bs.game.num_players</code>.
     */
    public Integer getNumPlayers() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>bs.game.creator_name</code>.
     */
    public GameRecord setCreatorName(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>bs.game.creator_name</code>.
     */
    public String getCreatorName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>bs.game.created_at</code>.
     */
    public GameRecord setCreatedAt(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>bs.game.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>bs.game.updated_at</code>.
     */
    public GameRecord setUpdatedAt(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>bs.game.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>bs.game.is_active</code>.
     */
    public GameRecord setIsActive(Boolean value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>bs.game.is_active</code>.
     */
    public Boolean getIsActive() {
        return (Boolean) get(7);
    }

    /**
     * Setter for <code>bs.game.creator_id</code>.
     */
    public GameRecord setCreatorId(UUID value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>bs.game.creator_id</code>.
     */
    public UUID getCreatorId() {
        return (UUID) get(8);
    }

    /**
     * Setter for <code>bs.game.rec_version</code>.
     */
    public GameRecord setRecVersion(Long value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>bs.game.rec_version</code>.
     */
    public Long getRecVersion() {
        return (Long) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<UUID, Boolean, JSONB, Integer, String, LocalDateTime, LocalDateTime, Boolean, UUID, Long> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<UUID, Boolean, JSONB, Integer, String, LocalDateTime, LocalDateTime, Boolean, UUID, Long> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Game.GAME.ID;
    }

    @Override
    public Field<Boolean> field2() {
        return Game.GAME.IN_PROGRESS;
    }

    @Override
    public Field<JSONB> field3() {
        return Game.GAME.DETAILS;
    }

    @Override
    public Field<Integer> field4() {
        return Game.GAME.NUM_PLAYERS;
    }

    @Override
    public Field<String> field5() {
        return Game.GAME.CREATOR_NAME;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Game.GAME.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return Game.GAME.UPDATED_AT;
    }

    @Override
    public Field<Boolean> field8() {
        return Game.GAME.IS_ACTIVE;
    }

    @Override
    public Field<UUID> field9() {
        return Game.GAME.CREATOR_ID;
    }

    @Override
    public Field<Long> field10() {
        return Game.GAME.REC_VERSION;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public Boolean component2() {
        return getInProgress();
    }

    @Override
    public JSONB component3() {
        return getDetails();
    }

    @Override
    public Integer component4() {
        return getNumPlayers();
    }

    @Override
    public String component5() {
        return getCreatorName();
    }

    @Override
    public LocalDateTime component6() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component7() {
        return getUpdatedAt();
    }

    @Override
    public Boolean component8() {
        return getIsActive();
    }

    @Override
    public UUID component9() {
        return getCreatorId();
    }

    @Override
    public Long component10() {
        return getRecVersion();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public Boolean value2() {
        return getInProgress();
    }

    @Override
    public JSONB value3() {
        return getDetails();
    }

    @Override
    public Integer value4() {
        return getNumPlayers();
    }

    @Override
    public String value5() {
        return getCreatorName();
    }

    @Override
    public LocalDateTime value6() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value7() {
        return getUpdatedAt();
    }

    @Override
    public Boolean value8() {
        return getIsActive();
    }

    @Override
    public UUID value9() {
        return getCreatorId();
    }

    @Override
    public Long value10() {
        return getRecVersion();
    }

    @Override
    public GameRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public GameRecord value2(Boolean value) {
        setInProgress(value);
        return this;
    }

    @Override
    public GameRecord value3(JSONB value) {
        setDetails(value);
        return this;
    }

    @Override
    public GameRecord value4(Integer value) {
        setNumPlayers(value);
        return this;
    }

    @Override
    public GameRecord value5(String value) {
        setCreatorName(value);
        return this;
    }

    @Override
    public GameRecord value6(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public GameRecord value7(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public GameRecord value8(Boolean value) {
        setIsActive(value);
        return this;
    }

    @Override
    public GameRecord value9(UUID value) {
        setCreatorId(value);
        return this;
    }

    @Override
    public GameRecord value10(Long value) {
        setRecVersion(value);
        return this;
    }

    @Override
    public GameRecord values(UUID value1, Boolean value2, JSONB value3, Integer value4, String value5, LocalDateTime value6, LocalDateTime value7, Boolean value8, UUID value9, Long value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GameRecord
     */
    public GameRecord() {
        super(Game.GAME);
    }

    /**
     * Create a detached, initialised GameRecord
     */
    public GameRecord(UUID id, Boolean inProgress, JSONB details, Integer numPlayers, String creatorName, LocalDateTime createdAt, LocalDateTime updatedAt, Boolean isActive, UUID creatorId, Long recVersion) {
        super(Game.GAME);

        set(0, id);
        set(1, inProgress);
        set(2, details);
        set(3, numPlayers);
        set(4, creatorName);
        set(5, createdAt);
        set(6, updatedAt);
        set(7, isActive);
        set(8, creatorId);
        set(9, recVersion);
    }
}
